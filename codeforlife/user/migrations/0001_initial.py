# Generated by Django 3.2.24 on 2024-02-20 15:45

import codeforlife.user.models.user
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0048_unique_school_names'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Independent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('common.student',),
        ),
        migrations.CreateModel(
            name='NonSchoolTeacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('common.teacher',),
        ),
        migrations.CreateModel(
            name='SchoolTeacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('common.teacher',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='session key')),
                ('session_data', models.TextField(verbose_name='session data')),
                ('expire_date', models.DateTimeField(db_index=True, verbose_name='expire date')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtpBypassToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(8)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_bypass_tokens', to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='AuthFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(choices=[('otp', 'one-time password')])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_factors', to='user.user')),
            ],
            options={
                'unique_together': {('user', 'type')},
            },
        ),
        migrations.CreateModel(
            name='AdminSchoolTeacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.schoolteacher',),
        ),
        migrations.CreateModel(
            name='AdminSchoolTeacherUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.AdminSchoolTeacherUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IndependentUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.IndependentUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NonAdminSchoolTeacher',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.schoolteacher',),
        ),
        migrations.CreateModel(
            name='NonAdminSchoolTeacherUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.NonAdminSchoolTeacherUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NonSchoolTeacherUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.NonSchoolTeacherUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SchoolTeacherUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.SchoolTeacherUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.StudentUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeacherUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
            managers=[
                ('objects', codeforlife.user.models.user.TeacherUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SessionAuthFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_factor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='user.authfactor')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_factors', to='user.session')),
            ],
            options={
                'unique_together': {('session', 'auth_factor')},
            },
        ),
    ]
